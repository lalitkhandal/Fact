apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.example.fact"
        minSdkVersion 25
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            buildConfigField("String", "BASE_URL", "\"https://dl.dropboxusercontent.com/\"")
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField("String", "BASE_URL", "\"https://dl.dropboxusercontent.com/\"")
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    /*Testing dependencies*/
    testImplementation "junit:junit:$junitVersion"

    /*Core library*/
    androidTestImplementation "androidx.test:core:$testCoreVersion"

    /*AndroidJUnitRunner and JUnit Rules*/
    androidTestImplementation "androidx.test:runner:$testRunnerVersion"
    androidTestImplementation "androidx.test:rules:$testRuleVersion"

    /*Assertions*/
    androidTestImplementation "androidx.test.ext:junit:$testJunitVersion"

    /*Espresso dependencies*/
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"

    // The following Espresso dependency can be either "implementation"
    // or "androidTestImplementation", depending on whether you want the
    // dependency to appear on your APK's compile classpath or the test APK
    // classpath.
    implementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"


    /*Kotlin support*/
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    /*Android support x libraries*/
    implementation "androidx.appcompat:appcompat:$appCompactVersion"
    implementation "com.google.android.material:material:$materialVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayoutVersion"

    /*View model*/
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycleVersion"

    /*Rest API*/
    implementation "com.squareup.retrofit2:retrofit:$retroFitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retroFitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"

    /*Reactive*/
    implementation "io.reactivex.rxjava2:rxjava:$rxjava2Version"
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid2Version"
    /*https://github.com/JakeWharton/RxBinding*/
    implementation "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:$rxjava2AdapterVersion"
    implementation "com.jakewharton.rxbinding2:rxbinding-design:$rxbindingVersion"

    /*Dependency injection*/
    implementation "com.google.dagger:dagger:$dagger2Version"
    kapt "com.google.dagger:dagger-compiler:$dagger2Version"
    kapt "com.google.dagger:dagger-android-processor:$dagger2Version"
    implementation "com.google.dagger:dagger-android-support:$dagger2Version"

    /*Image*/
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"
}
